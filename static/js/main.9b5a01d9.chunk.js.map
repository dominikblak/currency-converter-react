{"version":3,"sources":["Container/styled.js","Container/index.js","Header/styled.js","Header/index.js","Form/Result/styled.js","Form/Result/index.js","Form/Clock/styled.js","Form/Clock/index.js","Form/Clock/useCurrentDate.js","Form/styled.js","Form/index.js","Form/useRatesData.js","Footer/styled.js","Footer/index.js","App.js","reportWebVitals.js","img/money_exchange.jpg","GlobalStyle.js","index.js","theme.js"],"names":["Wrapper","styled","section","theme","color","white","Container","props","children","Content","h1","breakpoint","mobileMax","Header","title","ResultContent","p","ResultYourCurrency","green","ResultSelectedCurrency","red","Result","result","undefined","as","sourceAmount","toFixed","targetAmount","currency","LocalDate","Clock","formattedDate","useState","Date","date","setDate","useEffect","intervalDate","setInterval","clearInterval","useCurrentDate","toLocaleDateString","day","weekday","month","year","hour","minute","second","FormContent","form","fieldset","gradient","Span","span","Input","input","Button","button","Loading","Failure","Form","amount","setAmount","setCurrency","setResult","inputRef","useRef","dataFromApi","status","ratesData","setRatesData","setTimeout","a","axios","get","response","data","rates","console","log","useRatesData","onSubmit","event","preventDefault","amountTrimed","trim","rate","calculateResault","current","focus","htmlFor","ref","type","name","min","id","required","step","placeholder","value","onChange","target","Object","keys","map","footer","FooterContainerLink","Footer","href","author","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","background","mintgreen","blue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b5a01d9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.section`\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  color: ${({ theme }) => theme.color.white};\r\n  font-family: \"Titillium Web\", sans-serif;\r\n  padding: 20px;\r\n`;\r\n","import { Wrapper } from \"./styled\";\r\nconst Container = (props) => <Wrapper>{props.children}</Wrapper>;\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.h1`\r\n  margin-top: 100px;\r\n  text-align: center;\r\n  font-size: 3.5em;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n","import { Content } from \"./styled\";\r\nconst Header = (props) => <Content>{props.title}</Content>;\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ResultContent = styled.p`\r\n  color: white;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: grid;\r\n    grid-template-columns: auto;\r\n    word-break: break-all;\r\n  }\r\n`;\r\nexport const ResultYourCurrency = styled(ResultContent)`\r\n  color: ${({ theme }) => theme.color.green};\r\n`;\r\nexport const ResultSelectedCurrency = styled(ResultContent)`\r\n  color: ${({ theme }) => theme.color.red};\r\n`;\r\n","import { ResultContent, ResultYourCurrency, ResultSelectedCurrency } from \"./styled\";\r\n\r\nexport const Result = ({ result }) => (\r\n  <ResultContent>\r\n    {result !== undefined && (\r\n      <>\r\n        Otrzymasz : &nbsp;\r\n        <ResultYourCurrency as=\"strong\">{result.sourceAmount.toFixed(2)}&nbsp;PLN&nbsp;=&nbsp;</ResultYourCurrency>\r\n        <ResultSelectedCurrency as=\"strong\">\r\n          {result.targetAmount.toFixed(2)}&nbsp;{result.currency}\r\n        </ResultSelectedCurrency>\r\n      </>\r\n    )}\r\n  </ResultContent>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const LocalDate = styled.p`\r\n  font-family: monospace;\r\n  text-align: center;\r\n  padding: 10px;\r\n`;\r\n","import { useCurrentDate } from \"./useCurrentDate\";\r\nimport { LocalDate } from \"./styled\";\r\n\r\nconst Clock = () => {\r\n  const date = useCurrentDate();\r\n\r\n  const formattedDate = date.toLocaleDateString(undefined, {\r\n    day: \"numeric\",\r\n    weekday: \"long\",\r\n    month: \"long\",\r\n    year: \"numeric\",\r\n    hour: \"numeric\",\r\n    minute: \"numeric\",\r\n    second: \"numeric\",\r\n  });\r\n\r\n  return <LocalDate>Dzisiaj jest {formattedDate}</LocalDate>;\r\n};\r\n\r\nexport default Clock;\r\n","import { useState, useEffect } from \"react\";\r\nexport const useCurrentDate = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  useEffect(() => {\r\n    const intervalDate = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(intervalDate);\r\n    };\r\n  }, []);\r\n  return date;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormContent = styled.form`\r\n  max-width: 500px;\r\n  margin: 0px auto;\r\n  padding: 10px;\r\n`;\r\nexport const Wrapper = styled.fieldset`\r\n  background: ${({ theme }) => theme.color.gradient};\r\n`;\r\nexport const Span = styled.span`\r\n  display: inline-block;\r\n  width: 150px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: block;\r\n    text-align: center;\r\n    margin: 10px auto;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  margin-top: 10px;\r\n  margin-left: 30px;\r\n  width: 150px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    display: block;\r\n    text-align: center;\r\n    margin: 20px auto;\r\n  }\r\n`;\r\nexport const Button = styled.button`\r\n  display: block;\r\n  margin: 30px auto 10px;\r\n  @media (max-width: ${({ theme }) => theme.breakpoint.mobileMax}px) {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\nexport const Loading = styled.p`\r\n  color: ${({ theme }) => theme.color.green};\r\n`;\r\nexport const Failure = styled.p`\r\n  color: ${({ theme }) => theme.color.red};\r\n`;\r\n","import { useRef, useState } from \"react\";\r\n// import { currencies } from \"./currency.js\";\r\nimport { Result } from \"./Result\";\r\nimport Clock from \"./Clock\";\r\nimport { FormContent, Wrapper, Input, Span, Button, Loading, Failure } from \"./styled\";\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\nexport const Form = () => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [currency, setCurrency] = useState(\"EUR\");\r\n  const [result, setResult] = useState();\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const dataFromApi = useRatesData();\r\n\r\n  const status = dataFromApi.status;\r\n  const rates = dataFromApi.rates;\r\n  // const date = dataFromApi.date;\r\n\r\n  const calculateResault = (currency, amount) => {\r\n    const rate = rates[currency];\r\n\r\n    setResult({\r\n      sourceAmount: +amount,\r\n      targetAmount: amount * rate,\r\n      currency,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const amountTrimed = amount.trim();\r\n    if (!amountTrimed) {\r\n      return;\r\n    }\r\n    setAmount(amountTrimed);\r\n    calculateResault(currency, amount);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <FormContent onSubmit={onSubmit}>\r\n      <Wrapper>\r\n        <legend>Twoje dane</legend>\r\n        <Clock />\r\n        {status === \"loading\" ? (\r\n          <Loading>Sekunda... ładuje kursy z Europejskiego Banku Centralnego.</Loading>\r\n        ) : status === \"error\" ? (\r\n          <Failure>Coś poszło nie tak - sprawdź czy masz połączenie z internetem</Failure>\r\n        ) : (\r\n          <>\r\n            <p>\r\n              <label htmlFor=\"amountid\">\r\n                <Span> Twoja kwota w zł :</Span>\r\n                <Input\r\n                  ref={inputRef}\r\n                  type=\"number\"\r\n                  name=\"amount\"\r\n                  min=\"0\"\r\n                  id=\"amountid\"\r\n                  required\r\n                  step=\"0.01\"\r\n                  placeholder=\"Podaj kwotę w zł\"\r\n                  value={amount}\r\n                  onChange={({ target }) => setAmount(target.value)}\r\n                />\r\n              </label>\r\n            </p>\r\n            <p>\r\n              <label htmlFor=\"currency\">\r\n                <Span> Wybierz walutę : </Span>\r\n                <Input\r\n                  as=\"select\"\r\n                  name=\"currency_choice\"\r\n                  id=\"currency\"\r\n                  value={currency}\r\n                  required\r\n                  onChange={({ target }) => setCurrency(target.value)}\r\n                >\r\n                  {Object.keys(rates).map((currency) => (\r\n                    <option key={currency} value={currency}>\r\n                      {currency}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </label>\r\n            </p>\r\n            <p>\r\n              <Button>Przelicz</Button>\r\n            </p>\r\n            <Result result={result} />\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </FormContent>\r\n  );\r\n};\r\nexport default Form;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useRatesData = () => {\r\n  const [ratesData, setRatesData] = useState({\r\n    status: \"loading\",\r\n  });\r\n\r\n  const apiUrl = \"https://api.exchangerate.host/latest?base=PLN\";\r\n\r\n  useEffect(() => {\r\n    const apiDate = async () => {\r\n      try {\r\n        const response = await axios.get(apiUrl);\r\n        const { date, rates } = response.data;\r\n        console.log(response.data);\r\n\r\n        setRatesData({\r\n          status: \"success\",\r\n          rates,\r\n          date,\r\n        });\r\n      } catch (error) {\r\n        setRatesData({\r\n          status: \"error\",\r\n        });\r\n      }\r\n    };\r\n    setTimeout(apiDate, 2000);\r\n  }, []);\r\n  return ratesData;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.footer`\r\n  text-align: center;\r\n`;\r\nexport const Container = styled(Wrapper)`\r\n  padding: 20px;\r\n`;\r\nexport const FooterContainerLink = styled(Wrapper)`\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.color.white};\r\n`;\r\n","import { Wrapper, Container, FooterContainerLink } from \"./styled.js\";\r\n\r\nconst Footer = (props) => (\r\n  <Wrapper>\r\n    <Container as=\"div\">\r\n      <FooterContainerLink as=\"a\" target=\"blank\" href=\"https://github.com/dominikblak\">\r\n        {props.author}\r\n      </FooterContainerLink>\r\n    </Container>\r\n  </Wrapper>\r\n);\r\nexport default Footer;\r\n","import Container from \"./Container\";\r\nimport Header from \"./Header\";\r\nimport Form from \"./Form\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Header title=\"Kalkulator walut\"></Header>\r\n      <Form />\r\n      <Footer author=\"Dominik Blak 2021\"></Footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/money_exchange.283f3212.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./img/money_exchange.jpg\";\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n::after,\r\n::before {\r\n  box-sizing: inherit;\r\n}\r\nbody {\r\n  background: ${({ theme }) => theme.color.gradient}, url(${background}) repeat;\r\n  background-size: cover;\r\n  background-repeat: repeat;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  color: ${({ theme }) => theme.color.white};\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  overflow-x: auto;\r\n  line-height: 1.5;\r\n}\r\na:visited {\r\n  color: ${({ theme }) => theme.color.mintgreen};\r\n}\r\na:hover {\r\n  color: ${({ theme }) => theme.color.blue};\r\n}\r\na:active {\r\n  color: ${({ theme }) => theme.color.red};\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"./theme\";\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {\r\n  color: {\r\n    white: \"#FFFFFF\",\r\n    gradient: \"linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))\",\r\n    green: \"#008000\",\r\n    red: \"#FF0000\",\r\n    blue: \"#0000FF\",\r\n    mintgreen: \"#99FF99\",\r\n  },\r\n  breakpoint: {\r\n    mobileMax: 767,\r\n  },\r\n};\r\n"],"sourceRoot":""}